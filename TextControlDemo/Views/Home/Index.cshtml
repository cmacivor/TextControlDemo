@using TXTextControl.Web 
@using TXTextControl.Web.MVC

@Html.TXTextControl().TextControl().Render()

<input type="button" value="Create PDF" onclick="createPDF()" />
<input type="text" id="txtFileName" placeholder="File name" />
<input onclick="saveFile()" id="btnSave" type="button" value="Save" />
<input onclick="loadFile()" id="btnLoad" type="button" value="Load" />

@section Scripts {
    <script type="text/javascript">

        // converts base64 string back to a blob
        function base64ToBlob(base64) {
            var binary = atob(base64.replace(/\s/g, ''));
            var len = binary.length;
            var buffer = new ArrayBuffer(len);
            var view = new Uint8Array(buffer);

            for (var i = 0; i < len; i++) {
                view[i] = binary.charCodeAt(i);
            }

            return view;
        }

        function saveFile() {
            var fileName = document.getElementById("txtFileName").value;

            SaveToController(fileName);
        }

        function loadFile() {
            var fileName = document.getElementById("txtFileName").value;
            LoadFromController(fileName);
        }

        function SaveToController(DocumentName) {
            TXTextControl.saveDocument(TXTextControl.streamType.InternalUnicodeFormat,
                function (e) {
                    console.log(DocumentName)
                    console.log(e.data)
                    var serviceURL = "/Home/SaveTemplate";

                    $.ajax({
                        type: "POST",
                        url: serviceURL,
                        contentType: 'application/json',
                        data: JSON.stringify({
                            DocumentName: DocumentName,
                            BinaryDocument: e.data
                        }),
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(data, status) {
                        alert("Document has been saved successfully.");
                    }

                    function errorFunc() {
                        alert('Error');
                    }
                });
        }

        // load the document from the controller and load
        // it into the TXTextControl.Web
        function LoadFromController(DocumentName) {
            var serviceURL = "/Home/LoadTemplate";
            $.ajax({
                type: "POST",
                url: serviceURL,
                contentType: 'application/json',
                data: JSON.stringify({
                    DocumentName: DocumentName
                }),
                success: successFunc,
                error: errorFunc
            });
            function successFunc(data, status) {
                TXTextControl.loadDocument(TXTextControl.streamType.InternalUnicodeFormat, data);
            }
            function errorFunc() {
                alert('Error');
            }

        }

        function createPDF() {
            // save the contents of the editor
            TXTextControl.saveDocument(TXTextControl.streamType.InternalUnicodeFormat, function (e) {

                // call the Web API "CreatePDF"
                $.ajax({
                    type: "POST",
                    url: "/Home/CreatePDF?id=123",
                    contentType: 'application/json',
                    data: JSON.stringify({
                        document: e.data
                    }),

                    success: successFunc,
                    error: errorFunc
                });

                function successFunc(data, status) {
                    // create a file blob
                    var file = new Blob([base64ToBlob(data)], { type: "application/pdf" });

                    // create a temporary link element
                    var a = document.createElement("a");
                    a.href = URL.createObjectURL(file);
                    a.download = "results.pdf";

                    // attach to body and click
                    document.body.appendChild(a);
                    a.click();

                    // remove the element
                    setTimeout(function () {
                        document.body.removeChild(a);
                    }, 0);

                }

                function errorFunc(xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                }
            });
        }
    </script>
}

